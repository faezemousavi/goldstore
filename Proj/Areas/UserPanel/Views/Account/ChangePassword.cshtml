@model DataLayer.ViewModels.ChangePasswordViewModel

@{
    ViewBag.Title = "تغییر کلمه عبور";
    Layout = "~/Views/Shared/_DefaultLayout.cshtml";
}

<h2>تغییر کلمه عبور</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    if(ViewBag.success == true)
    {
        <div class="alert alert-success margin-top-15">
            <p>رمز عبور شما با موفقیت تغییر کرد!</p>
        </div>
    }

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.OldPass, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OldPass, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OldPass, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rePassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rePassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rePassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="تغییر کلمه عبور" class="btn btn-info" />
            </div>
        </div>
    </div>
}
